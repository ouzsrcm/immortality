definitions:
  restapi.AuthRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  restapi.AuthResponse:
    properties:
      data: {}
      errorMessage:
        type: string
      status:
        type: string
    type: object
  restapi.CurrentTokensResponse:
    properties:
      data: {}
      errorMessage:
        type: string
      status:
        type: string
    type: object
  restapi.ExpireAllTokensResponse:
    properties:
      data: {}
      errorMessage:
        type: string
      status:
        type: string
    type: object
  restapi.ExpireTokenRequest:
    properties:
      token:
        type: string
    type: object
  restapi.ExpireTokenResponse:
    properties:
      data: {}
      errorMessage:
        type: string
      status:
        type: string
    type: object
  restapi.TokenExistsRequest:
    properties:
      token:
        type: string
    type: object
  restapi.TokenExistsResponse:
    properties:
      data: {}
      errorMessage:
        type: string
      exists:
        type: boolean
      status:
        type: string
    type: object
  restapi.UserCreateRequest:
    properties:
      email:
        example: john.doe@gmail.com
        type: string
      firstName:
        example: John
        type: string
      gsm:
        example: 555-555-5555
        type: string
      lastName:
        example: Doe
        type: string
      password:
        example: "123456"
        type: string
    type: object
  restapi.UserDeleteResponse:
    properties:
      data: {}
      errorMessage:
        type: string
      status:
        type: string
    type: object
  restapi.UserDto:
    properties:
      email:
        example: john.doe@gmail.com
        type: string
      firstName:
        example: John
        type: string
      gsm:
        example: 555-555-5555
        type: string
      id:
        example: 1
        type: integer
      lastName:
        example: Doe
        type: string
    type: object
  restapi.UserListResponse:
    properties:
      data: {}
      errorMessage:
        type: string
      status:
        type: string
      users:
        items:
          $ref: '#/definitions/restapi.UserDto'
        type: array
    type: object
  restapi.UserResponse:
    properties:
      data: {}
      errorMessage:
        type: string
      status:
        type: string
      user:
        $ref: '#/definitions/restapi.UserDto'
    type: object
  restapi.UserUpdateRequest:
    properties:
      email:
        example: john.doe@gmail.com
        type: string
      firstName:
        example: John
        type: string
      gsm:
        example: 555-555-5555
        type: string
      id:
        example: 1
        type: integer
      lastName:
        example: Doe
        type: string
    type: object
  restapi.UserUpdateResponse:
    properties:
      data: {}
      errorMessage:
        type: string
      status:
        type: string
      user:
        $ref: '#/definitions/restapi.UserDto'
    type: object
info:
  contact: {}
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: auth for token
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/restapi.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: "true"
          schema:
            $ref: '#/definitions/restapi.AuthResponse'
        "401":
          description: "false"
          schema:
            $ref: '#/definitions/restapi.AuthResponse'
        "404":
          description: "false"
          schema:
            $ref: '#/definitions/restapi.AuthResponse'
        "500":
          description: "false"
          schema:
            $ref: '#/definitions/restapi.AuthResponse'
      summary: auth for token
      tags:
      - auth
  /auth/current_tokens:
    get:
      consumes:
      - application/json
      description: current tokens
      produces:
      - application/json
      responses:
        "200":
          description: "true"
          schema:
            $ref: '#/definitions/restapi.CurrentTokensResponse'
        "401":
          description: "false"
          schema:
            $ref: '#/definitions/restapi.CurrentTokensResponse'
        "404":
          description: "false"
          schema:
            $ref: '#/definitions/restapi.CurrentTokensResponse'
        "500":
          description: "false"
          schema:
            $ref: '#/definitions/restapi.CurrentTokensResponse'
      summary: current tokens
      tags:
      - auth
  /auth/expire_all_tokens:
    get:
      consumes:
      - application/json
      description: expire all tokens
      produces:
      - application/json
      responses:
        "200":
          description: "true"
          schema:
            $ref: '#/definitions/restapi.ExpireAllTokensResponse'
        "401":
          description: "false"
          schema:
            $ref: '#/definitions/restapi.ExpireAllTokensResponse'
        "404":
          description: "false"
          schema:
            $ref: '#/definitions/restapi.ExpireAllTokensResponse'
        "500":
          description: "false"
          schema:
            $ref: '#/definitions/restapi.ExpireAllTokensResponse'
      summary: expire all tokens
      tags:
      - auth
  /auth/expire_token:
    post:
      consumes:
      - application/json
      description: expire token
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/restapi.ExpireTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: "true"
          schema:
            $ref: '#/definitions/restapi.ExpireTokenResponse'
        "401":
          description: "false"
          schema:
            $ref: '#/definitions/restapi.ExpireTokenResponse'
        "404":
          description: "false"
          schema:
            $ref: '#/definitions/restapi.ExpireTokenResponse'
        "500":
          description: "false"
          schema:
            $ref: '#/definitions/restapi.ExpireTokenResponse'
      summary: expire token
      tags:
      - auth
  /auth/token_exists:
    post:
      consumes:
      - application/json
      description: token exists
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/restapi.TokenExistsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: "true"
          schema:
            $ref: '#/definitions/restapi.TokenExistsResponse'
        "401":
          description: "false"
          schema:
            $ref: '#/definitions/restapi.TokenExistsResponse'
        "404":
          description: "false"
          schema:
            $ref: '#/definitions/restapi.TokenExistsResponse'
        "500":
          description: "false"
          schema:
            $ref: '#/definitions/restapi.TokenExistsResponse'
      summary: token exists
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/restapi.UserListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/restapi.UserListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/restapi.UserListResponse'
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/restapi.UserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/restapi.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/restapi.UserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/restapi.UserResponse'
      summary: Create a user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/restapi.UserDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/restapi.UserDeleteResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/restapi.UserDeleteResponse'
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/restapi.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/restapi.UserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/restapi.UserResponse'
      summary: Get a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/restapi.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/restapi.UserUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/restapi.UserUpdateResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/restapi.UserUpdateResponse'
      summary: Update a user
      tags:
      - users
swagger: "2.0"
