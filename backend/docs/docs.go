// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth": {
            "post": {
                "description": "auth for token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "auth for token",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/restapi.AuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "true",
                        "schema": {
                            "$ref": "#/definitions/restapi.AuthResponse"
                        }
                    },
                    "401": {
                        "description": "false",
                        "schema": {
                            "$ref": "#/definitions/restapi.AuthResponse"
                        }
                    },
                    "404": {
                        "description": "false",
                        "schema": {
                            "$ref": "#/definitions/restapi.AuthResponse"
                        }
                    },
                    "500": {
                        "description": "false",
                        "schema": {
                            "$ref": "#/definitions/restapi.AuthResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/restapi.UserListResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "restapi.AuthRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "restapi.AuthResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "restapi.UserListResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@gmail.com"
                },
                "firstName": {
                    "type": "string",
                    "example": "John"
                },
                "gsm": {
                    "type": "string",
                    "example": "555-555-5555"
                },
                "lastLoginDate": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "lastName": {
                    "type": "string",
                    "example": "Doe"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
